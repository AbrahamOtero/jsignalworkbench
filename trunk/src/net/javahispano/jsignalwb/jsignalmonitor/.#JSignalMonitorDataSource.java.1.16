/*
 * JSignalMonitor.java
 *
 * Created on 13 de abril de 2007, 11:16
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package net.javahispano.jsignalwb.jsignalmonitor;

import java.util.List;
import net.javahispano.jsignalwb.*;

/**
 *
 * @author Roman
 */
public interface JSignalMonitorDataSource {

    /**
     * Devuelve los valores de la señal que se le pasa como parámetro en el
     * intervalo del tiempo solicitado.
     *
     * @param signalName nombre de la señal.
     * @param firstValue Primer instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 del cual se requiere los valores de la señal.
     *   Ver {@link TimePositionConverter}.
     * @param lastValue Último instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 del cual se requiere los valores de la señal.
     *   Ver {@link TimePositionConverter}.
     * @return Valores de la señal en el intervalo indicado. Si la señal no
     *   estuviese definida en alguna parte de ese intervalo de tiempo se
     *   considerará que su valor es el de la abscissa.
     * @throws {@link SignalNotFoundException} si no existe una señal con el
     *   nombre indicado cargada en el entorno.
     * @todo (d) Si la señal no esta definida se devuelve el valor de la abscissa
     *  en vez de cero.
     * @todo (Roman) añadir @link a getAbscissaValue cuando arregle las burradas de demeter
     * y tenga el metodo en JSignalMonitor
     */
    public float[] getChannelData(String signalName, long firstValue,
                                  long lastValue) throws
            SignalNotFoundException;

    /**
     * Devuelve los valores de énfasis de la señal que se le pasa como parámetro
     * en el intervalo del tiempo solicitado. En la implementación actual, el
     * énfasis se muestra coloreando aquellas partes de la señal cuyo nivel de
     * énfasis es superior a 0. El mayor nivel de énfasis se representa mediante
     * el color rojo.
     *
     * @param signalName nombre de la señal.
     * @param firstValue Primer instante de tiempo medido en milisegundos desde
     *   el 00:00:00 01/01/1970 del cual se requiere los valores de énfasis.
     *   Ver {@link TimePositionConverter}.
     * @param lastValue Último instante de tiempo medido en milisegundos desde
     *   el 00:00:00 01/01/1970 del cual se requiere los valores de énfasis Ver
     *   {@link TimePositionConverter}.
     * @return Valores de énfasis de la señal en el intervalo indicado. Los
     *   valores de énfasis deberán estar comprendidos en el intervalo [0,
     *   100], correspondiéndose el 0 con el nivel más bajo de énfasis y el 100
     *   con el nivel más alto. Si la señal no estuviese definida en alguna
     *   parte de ese intervalo de tiempo se considerará que su valor es 0.
     */
    public short[] getSignalEmphasisLevels(String signalName, long firstValue,
                                    long lastValue);

    /**
     * Devuelve un listado de las marcas de la señal que se le pasa como parámetro en el
     * intervalo del tiempo solicitado. Ver {@link JSignalMonitorMark}.
     *
     * @param signalName nombre de la señal.
     * @param firstValue Primer instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 del cual se requieren las marcas de la señal.
     *   Ver {@link TimePositionConverter}.
     * @param lastValue Último instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 del cual se requieren las marcas de la señal.
     *   Ver {@link TimePositionConverter}.
     * @return Marcas de la señal en el intervalo indicado. Si la señal no
     *   tuviera definida en ese intervalo de tiempo la lista sera vacia.
     * @throws {@link SignalNotFoundException} si no existe una señal con el
     *   nombre indicado cargada en el entorno.
     */
    public List<JSignalMonitorMark> getChannelMark(String signalName,long firstValue,
                                           long lastValue);

    /**
     * Devuelve el valor de la señal que se le pasa como parámetro en el
     * instante del tiempo solicitado.
     *
     * @param signalName nombre de la señal.
     * @param time Instante de tiempo medido en milisegundos desde 00:00:00
     *   01/01/1970. Ver {@link TimePositionConverter}.
     * @return Valor de la señal en el instante indicado. Si la señal no
     *   estuviese definida en ese instante de tiempo se considerará que su
     *   valor es 0.
     * @throws {@link SignalNotFoundException} si no existe una señal con el
     *   nombre indicado cargada en el entorno.
     */
    public float getChannelValueAtTime(String signalName, long time) throws
            SignalNotFoundException;

    /**
     * Notifica al {@link JSignalMonitorDataSource} de que el usuario ha
     * terminado la selección de un intervalo de señal.
     *
     * @param signalName nombre de la señal.
     * @param startTime Primer instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 seleccionado. Ver {@link TimePositionConverter}.
     * @param endTime Último instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 seleccionado Ver {@link TimePositionConverter}.
     */
    public void notifyIntervalSelection(String signalName, long startTime,
                                 long endTime);

    /**
     * Notifica al {@link JSignalMonitorDataSource} de que el usuario ha
     * terminado creacion de una marca de instante en la señal.
     *
     * @param signalName nombre de la señal.
     * @param time Instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 seleccionado. Ver {@link TimePositionConverter}.
     */
    public void notifyMarkAdded(String signalName,long time);

    /**
     * Notifica al {@link JSignalMonitorDataSource} de que el usuario ha
     * terminado la selección de una marca de  intervalo en la señal.
     *
     * @param signalName nombre de la señal.
     * @param startTime Primer instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 seleccionado. Ver {@link TimePositionConverter}.
     * @param endTime Último instante de tiempo medido en milisegundos desde
     *   00:00:00 01/01/1970 seleccionado Ver {@link TimePositionConverter}.
     */
    public void notifyMarkAdded(String signalName,long startTime,long endTime);
}
